2022-01-12 10:23:24 Cfg_SwRTC_SVCU_0042.py 70 <module> __init__     form = TestPlatForm(18125, 18125)\n (18125, 18125) {}
2022-01-12 10:23:24 udp_loglib.py 1561 __init__ spawn         gevent.spawn(gevent.empty)   (<class 'udp_loglib.myGevent'>, <function myGevent.empty >) {}
2022-01-12 10:23:25 udp_loglib.py 1994 _set_client mPrint                 mPrint('use mvcu p')\n ('use mvcu p',) {}
2022-01-12 10:23:25 udp_loglib.py 2009 gevent_join spawn         greenlet_list = [gevent.spawn(greenlet_list)]\n (<class 'udp_loglib.myGevent'>, <function confSet >) {}
2022-01-12 10:23:25 udp_loglib.py 2016 gevent_join spawn         gevent.spawn(form._log_recv, *(form.clientP, )),   (<class 'udp_loglib.myGevent'>, <bound method TestPlatForm._log_recv of <udp_loglib.TestPlatForm object >>, <udp_loglib.UdpClient object >) {}
2022-01-12 10:23:25 udp_loglib.py 2017 gevent_join spawn         gevent.spawn(form._log_recv, *(form.clientS, )),   (<class 'udp_loglib.myGevent'>, <bound method TestPlatForm._log_recv of <udp_loglib.TestPlatForm object >>, <udp_loglib.UdpClient object >) {}
2022-01-12 10:23:25 udp_loglib.py 2018 gevent_join spawn         gevent.spawn(form._serial_recv),\n (<class 'udp_loglib.myGevent'>, <bound method TestPlatForm._serial_recv of <udp_loglib.TestPlatForm object >>) {}
2022-01-12 10:23:25 udp_loglib.py 2019 gevent_join spawn         gevent.spawn(form._mib_recv),\n (<class 'udp_loglib.myGevent'>, <bound method TestPlatForm._mib_recv of <udp_loglib.TestPlatForm object >>) {}
2022-01-12 10:23:25 udp_loglib.py 2020 gevent_join spawn         gevent.spawn(form._wireshark_recv)]\n (<class 'udp_loglib.myGevent'>, <bound method TestPlatForm._wireshark_recv of <udp_loglib.TestPlatForm object >>) {}
2022-01-12 10:23:25 udp_loglib.py 2023 gevent_join joinall     gevent.joinall(default_list)\n (<class 'udp_loglib.myGevent'>, [<Greenlet >>(<bound method TestPlatForm._log_recv of <udp_logli, [FrameInfo(frame=<frame >, <Greenlet >>(<bound method TestPlatForm._log_recv of <udp_logli, [FrameInfo(frame=<frame >, <Greenlet >>(<bound method TestPlatForm._serial_recv of <udp_lo, [FrameInfo(frame=<frame >, <Greenlet >>(<bound method TestPlatForm._mib_recv of <udp_logli, [FrameInfo(frame=<frame >, <Greenlet >>(<bound method TestPlatForm._wireshark_recv of <udp, [FrameInfo(frame=<frame >, <Greenlet >>(<function confSet >, [FrameInfo(frame=<frame >]) {}
2022-01-12 10:23:25 Cfg_SwRTC_SVCU_0042.py 25 LogPath_set path_set     Log.path_set(dir_path)\n (<class 'udp_loglib.Log'>, 'c:\\Users\\test2\\Desktop\\testplaatform1025\\Master\\testplatform\\case_test\\testcase\\Sw_SVCU/Log/Cfg_SwRTC_SVCU_0042/default') {}
2022-01-12 10:23:25 udp_loglib.py 1478 path_set mPrint         mPrint('Log path set to %s' % cls._root)\n ('Log path set to c:\\Users\\test2\\Desktop\\testplaatform1025\\Master\\testplatform\\case_test\\testcase\\Sw_SVCU\\Log\\Cfg_SwRTC_SVCU_0042\\default/',) {}
2022-01-12 10:23:25 Cfg_SwRTC_SVCU_0042.py 79 confSet respondCheck         FrameLib.respondCheck()   (<class 'udp_loglib.FrameLib'>,) {}
2022-01-12 10:23:25 udp_loglib.py 666 respondCheck mPrint                 Public.mPrint('set success')\n ('set success',) {}
2022-01-12 10:23:25 udp_loglib.py 377 run _log_recv             rt_val = func(*args, **kwargs)\n (<udp_loglib.UdpClient object >,) {}
2022-01-12 10:23:25 udp_loglib.py 1817 _log_recv mPrint         mPrint('recv start %s,%s' % client.remote)\n ('recv start 20.2.1.11,18125',) {}
2022-01-12 10:23:25 udp_loglib.py 377 run _log_recv             rt_val = func(*args, **kwargs)\n (<udp_loglib.UdpClient object >,) {}
2022-01-12 10:23:25 udp_loglib.py 1817 _log_recv mPrint         mPrint('recv start %s,%s' % client.remote)\n ('recv start 20.1.1.11,18125',) {}
2022-01-12 10:23:25 serialread.py 121 open_all funclog.write             funclog.wirte(port, outfile)\n ('COM23', None) {}
2022-01-12 10:23:25 serialread.py 121 open_all funclog.write             funclog.wirte(port, outfile)\n ('COM22', None) {}
2022-01-12 10:23:25 udp_loglib.py 1850 _serial_recv mPrint                     mPrint('start listen', self._SerialRead.queue_dict.keys())\n ('start listen', dict_keys(['COM23', 'COM22'])) {}
2022-01-12 10:23:25 udp_loglib.py 1930 _mib_recv get_value                 self.mib.get_value('lruDefaultCode', outfile= 'auto_getmib.log', raise_error=False)\n ('lruDefaultCode',) {'outfile': 'auto_getmib.log', 'raise_error': False}
2022-01-12 10:23:25 Cfg_SwRTC_SVCU_0042.py 25 LogPath_set path_set     Log.path_set(dir_path)\n (<class 'udp_loglib.Log'>, 'c:\\Users\\test2\\Desktop\\testplaatform1025\\Master\\testplatform\\case_test\\testcase\\Sw_SVCU/Log/Cfg_SwRTC_SVCU_0042/02') {}
2022-01-12 10:23:25 udp_loglib.py 1478 path_set mPrint         mPrint('Log path set to %s' % cls._root)\n ('Log path set to c:\\Users\\test2\\Desktop\\testplaatform1025\\Master\\testplatform\\case_test\\testcase\\Sw_SVCU\\Log\\Cfg_SwRTC_SVCU_0042\\02/',) {}
2022-01-12 10:23:25 udp_loglib.py 1395 tag_send __init__         frame = UdpSendFrame()\n () {}
2022-01-12 10:23:25 Cfg_SwRTC_SVCU_0042.py 46 step2 tst_set     form.tst_set(svcus, Tag.tag_send('00420111'))\n (3, <udp_loglib.UdpSendFrame object >) {}
2022-01-12 10:23:25 udp_loglib.py 1350 _set __init__         frame = UdpSendFrame()\n () {}
2022-01-12 10:23:25 udp_loglib.py 1751 tst_set tst_set             self.tst_set(slots, Conf.allFlagSet(1), False, False)\n (3, <udp_loglib.UdpSendFrame object >, False, False) {}
2022-01-12 10:23:25 udp_loglib.py 1779 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-01-12 10:23:25 udp_loglib.py 1779 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-01-12 10:23:26 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.1',) {'snmpip': '20.2.1.11'}
2022-01-12 10:23:26 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.1',) {'snmpip': '20.1.1.11'}
2022-01-12 10:23:26 udp_loglib.py 1912 _wireshark_recv start                 p_new = self.wireShark.start(outfile='wireshark_recv.pcapng', block=False)\n () {'outfile': 'wireshark_recv.pcapng', 'block': False}
2022-01-12 10:23:26 wireShark.py 103 start mPrint             self.print('%s' % self.get_path(outfile))\n ('c:\\Users\\test2\\Desktop\\testplaatform1025\\Master\\testplatform\\case_test\\testcase\\Sw_SVCU\\Log\\Cfg_SwRTC_SVCU_0042\\02/wireshark_recv.pcapng',) {}
2022-01-12 10:23:26 udp_loglib.py 405 empty buzy                     buzy(count, (cur_time - temp))\n (4, 1.0719397068023682) {}
2022-01-12 10:23:26 udp_loglib.py 396 buzy mPrint             Public.mPrint('block', count, round(ttime, 2))\n ('block', 4, 1.07) {}
2022-01-12 10:23:26 udp_loglib.py 1785 tst_set respondCheck             FrameLib.respondCheck()\n (<class 'udp_loglib.FrameLib'>,) {}
2022-01-12 10:23:26 FuncLog.py 34 run _walk                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.2.1.4', 28) {'snmpip': '20.2.1.11'}
2022-01-12 10:23:26 FuncLog.py 34 run _walk                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.2.1.4', 28) {'snmpip': '20.1.1.11'}
2022-01-12 10:23:26 udp_loglib.py 838 recv _reply_Recv             Reply._reply_Recv(string)\n (<class 'udp_loglib.Reply'>, 'ff0c320f00000000030001000171f5') {}
2022-01-12 10:23:27 wireShark.py 73 __find_Conn mPrint             self.print('“‘Ã´Õ¯  ≈‰∆˜: %s' % self._Conn)\n ('“‘Ã´Õ¯  ≈‰∆˜: “‘Ã´Õ¯',) {}
2022-01-12 10:23:27 udp_loglib.py 838 recv _reply_Recv             Reply._reply_Recv(string)\n (<class 'udp_loglib.Reply'>, 'ff0c300f0000420111000000004e21') {}
2022-01-12 10:23:27 udp_loglib.py 666 respondCheck mPrint                 Public.mPrint('set success')\n ('set success',) {}
2022-01-12 10:23:29 udp_loglib.py 1930 _mib_recv get_value                 self.mib.get_value('lruDefaultCode', outfile= 'auto_getmib.log', raise_error=False)\n ('lruDefaultCode',) {'outfile': 'auto_getmib.log', 'raise_error': False}
2022-01-12 10:23:29 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.1',) {'snmpip': '20.2.1.11'}
2022-01-12 10:23:29 FuncLog.py 34 run _walk                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.2.1.4', 28) {'snmpip': '20.2.1.11'}
2022-01-12 10:23:57 Cfg_SwRTC_SVCU_0042.py 25 LogPath_set path_set     Log.path_set(dir_path)\n (<class 'udp_loglib.Log'>, 'c:\\Users\\test2\\Desktop\\testplaatform1025\\Master\\testplatform\\case_test\\testcase\\Sw_SVCU/Log/Cfg_SwRTC_SVCU_0042/03') {}
2022-01-12 10:23:57 udp_loglib.py 1478 path_set mPrint         mPrint('Log path set to %s' % cls._root)\n ('Log path set to c:\\Users\\test2\\Desktop\\testplaatform1025\\Master\\testplatform\\case_test\\testcase\\Sw_SVCU\\Log\\Cfg_SwRTC_SVCU_0042\\03/',) {}
2022-01-12 10:23:57 Cfg_SwRTC_SVCU_0042.py 51 step3 before_dump     form.before_dump(svcus)\n (3,) {}
2022-01-12 10:23:57 udp_loglib.py 1350 _set __init__         frame = UdpSendFrame()\n () {}
2022-01-12 10:23:57 udp_loglib.py 1790 before_dump tst_set         self.tst_set(slots, Conf.notReprogOnDump(), openflag = False, autowait=False)  (3, <udp_loglib.UdpSendFrame object >) {'openflag': False, 'autowait': False}
2022-01-12 10:23:57 udp_loglib.py 1779 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-01-12 10:23:57 udp_loglib.py 1350 _set __init__         frame = UdpSendFrame()\n () {}
2022-01-12 10:23:57 udp_loglib.py 1791 before_dump tst_set         self.tst_set(slots, Conf.notBurnFuse(), openflag = False, autowait=False)  (3, <udp_loglib.UdpSendFrame object >) {'openflag': False, 'autowait': False}
2022-01-12 10:23:57 udp_loglib.py 1779 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-01-12 10:23:58 udp_loglib.py 1930 _mib_recv get_value                 self.mib.get_value('lruDefaultCode', outfile= 'auto_getmib.log', raise_error=False)\n ('lruDefaultCode',) {'outfile': 'auto_getmib.log', 'raise_error': False}
2022-01-12 10:23:58 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.1',) {'snmpip': '20.2.1.11'}
2022-01-12 10:23:58 udp_loglib.py 1812 before_dump respondCheck         FrameLib.respondCheck()\n (<class 'udp_loglib.FrameLib'>,) {}
2022-01-12 10:23:58 udp_loglib.py 1912 _wireshark_recv start                 p_new = self.wireShark.start(outfile='wireshark_recv.pcapng', block=False)\n () {'outfile': 'wireshark_recv.pcapng', 'block': False}
2022-01-12 10:23:58 wireShark.py 103 start mPrint             self.print('%s' % self.get_path(outfile))\n ('c:\\Users\\test2\\Desktop\\testplaatform1025\\Master\\testplatform\\case_test\\testcase\\Sw_SVCU\\Log\\Cfg_SwRTC_SVCU_0042\\03/wireshark_recv.pcapng',) {}
2022-01-12 10:23:58 FuncLog.py 34 run _walk                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.2.1.4', 28) {'snmpip': '20.2.1.11'}
2022-01-12 10:23:58 udp_loglib.py 838 recv _reply_Recv             Reply._reply_Recv(string)\n (<class 'udp_loglib.Reply'>, 'ff0c320f0200000003000000009083') {}
2022-01-12 10:23:59 udp_loglib.py 838 recv _reply_Recv             Reply._reply_Recv(string)\n (<class 'udp_loglib.Reply'>, 'ff0c320f0200000005000100017a17') {}
2022-01-12 10:23:59 udp_loglib.py 666 respondCheck mPrint                 Public.mPrint('set success')\n ('set success',) {}
2022-01-12 10:23:59 udp_loglib.py 1395 tag_send __init__         frame = UdpSendFrame()\n () {}
2022-01-12 10:23:59 Cfg_SwRTC_SVCU_0042.py 52 step3 tst_set     form.tst_set(svcus, Tag.tag_send('00420211'))\n (3, <udp_loglib.UdpSendFrame object >) {}
2022-01-12 10:23:59 udp_loglib.py 1350 _set __init__         frame = UdpSendFrame()\n () {}
2022-01-12 10:23:59 udp_loglib.py 1751 tst_set tst_set             self.tst_set(slots, Conf.allFlagSet(1), False, False)\n (3, <udp_loglib.UdpSendFrame object >, False, False) {}
2022-01-12 10:23:59 udp_loglib.py 1779 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-01-12 10:23:59 udp_loglib.py 1779 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-01-12 10:24:00 udp_loglib.py 1785 tst_set respondCheck             FrameLib.respondCheck()\n (<class 'udp_loglib.FrameLib'>,) {}
2022-01-12 10:24:00 udp_loglib.py 1914 _wireshark_recv spawn                     gevent.spawn(kill_p_old, p_old)\n (<class 'udp_loglib.myGevent'>, <function TestPlatForm._wireshark_recv.<locals>.kill_p_old >, <Popen >) {}
2022-01-12 10:24:00 udp_loglib.py 838 recv _reply_Recv             Reply._reply_Recv(string)\n (<class 'udp_loglib.Reply'>, 'ff0c320f00000000030001000171f5') {}
2022-01-12 10:24:00 udp_loglib.py 838 recv _reply_Recv             Reply._reply_Recv(string)\n (<class 'udp_loglib.Reply'>, 'ff0c300f00004202110000000080c1') {}
2022-01-12 10:24:01 udp_loglib.py 666 respondCheck mPrint                 Public.mPrint('set success')\n ('set success',) {}
2022-01-12 10:24:11 Cfg_SwRTC_SVCU_0042.py 54 step3 get_value     defaultCode = form.mib.get_value('lruDefaultCode', lru = svcus)\n ('lruDefaultCode',) {'lru': 3}
2022-01-12 10:24:11 mib.py 250 lruIndex_get get_value             lruDescr_value = self.get_value('lruDescr')\n ('lruDescr',) {}
2022-01-12 10:24:11 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.1',) {'snmpip': '20.2.1.11'}
2022-01-12 10:24:11 FuncLog.py 34 run _walk                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.2.1.2', 28) {'snmpip': '20.2.1.11'}
2022-01-12 10:24:13 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.2.1.4.2',) {'add': '', 'snmpip': '20.2.1.11'}
2022-01-12 10:24:16 caseFunc.py 222 check_allboard get_funcMode         mode_dict = Config.form.get_funcMode(slots)\n (3,) {}
2022-01-12 10:24:28 caseFunc.py 222 check_allboard get_funcMode         mode_dict = Config.form.get_funcMode(slots)\n ([3],) {}
2022-01-12 10:24:41 caseFunc.py 222 check_allboard get_funcMode         mode_dict = Config.form.get_funcMode(slots)\n ([3],) {}
2022-01-12 10:24:54 caseFunc.py 222 check_allboard get_funcMode         mode_dict = Config.form.get_funcMode(slots)\n ([3],) {}
2022-01-12 10:25:02 udp_loglib.py 1930 _mib_recv get_value                 self.mib.get_value('lruDefaultCode', outfile= 'auto_getmib.log', raise_error=False)\n ('lruDefaultCode',) {'outfile': 'auto_getmib.log', 'raise_error': False}
2022-01-12 10:25:02 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.1',) {'snmpip': '20.2.1.11'}
2022-01-12 10:25:03 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.1',) {'snmpip': '20.2.1.11'}
2022-01-12 10:25:03 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.1',) {'snmpip': '20.1.1.11'}
2022-01-12 10:25:07 caseFunc.py 222 check_allboard get_funcMode         mode_dict = Config.form.get_funcMode(slots)\n ([3],) {}
2022-01-12 10:25:20 caseFunc.py 222 check_allboard get_funcMode         mode_dict = Config.form.get_funcMode(slots)\n ([3],) {}
2022-01-12 10:25:20 udp_loglib.py 1633 __get_funcMode get_functionmode                 funcMode = viv.get_functionmode()\n () {}
2022-01-12 10:25:39 caseFunc.py 222 check_allboard get_funcMode         mode_dict = Config.form.get_funcMode(slots)\n ([3],) {}
2022-01-12 10:25:39 udp_loglib.py 1633 __get_funcMode get_functionmode                 funcMode = viv.get_functionmode()\n () {}
2022-01-12 10:25:39 Cfg_SwRTC_SVCU_0042.py 59 step3 get_eventlog     form.get_eventlog(svcus)\n (3,) {}
2022-01-12 10:25:39 udp_loglib.py 1614 get_eventlog get_eventlog                 event = viv.get_eventlog(cpu)\n ('A',) {}
2022-01-12 10:25:41 udp_loglib.py 1614 get_eventlog get_eventlog                 event = viv.get_eventlog(cpu)\n ('B',) {}
2022-01-12 10:25:44 Cfg_SwRTC_SVCU_0042.py 83 confSet normal_end         Public.normal_end()\n (<class 'udp_loglib.Public'>,) {}
2022-01-12 10:25:44 udp_loglib.py 88 normal_end mPrint         cls.mPrint('normal end')\n ('normal end',) {}
2022-01-12 10:25:44 Cfg_SwRTC_SVCU_0042.py 84 confSet mPrint         Public.mPrint('exit')\n ('exit',) {}
