2022-03-29 16:28:55 Cfg2_SyRTC_0001.py 81 <module> __init__     form = TestPlatForm(18125, 18125)\n (18125, 18125) {}
2022-03-29 16:28:55 udp_loglib.py 1563 __init__ spawn         gevent.spawn(gevent.empty)   (<class 'udp_loglib.myGevent'>, <function myGevent.empty >) {}
2022-03-29 16:28:55 udp_loglib.py 2000 _set_client mPrint             mPrint('use 2 mvcu')\n ('use 2 mvcu',) {}
2022-03-29 16:28:55 udp_loglib.py 2011 gevent_join spawn         greenlet_list = [gevent.spawn(greenlet_list)]\n (<class 'udp_loglib.myGevent'>, <function confSet >) {}
2022-03-29 16:28:55 udp_loglib.py 2018 gevent_join spawn         gevent.spawn(form._log_recv, *(form.clientP, )),   (<class 'udp_loglib.myGevent'>, <bound method TestPlatForm._log_recv of <udp_loglib.TestPlatForm object >>, <udp_loglib.UdpClient object >) {}
2022-03-29 16:28:55 udp_loglib.py 2019 gevent_join spawn         gevent.spawn(form._log_recv, *(form.clientS, )),   (<class 'udp_loglib.myGevent'>, <bound method TestPlatForm._log_recv of <udp_loglib.TestPlatForm object >>, <udp_loglib.UdpClient object >) {}
2022-03-29 16:28:55 udp_loglib.py 2020 gevent_join spawn         gevent.spawn(form._serial_recv),\n (<class 'udp_loglib.myGevent'>, <bound method TestPlatForm._serial_recv of <udp_loglib.TestPlatForm object >>) {}
2022-03-29 16:28:55 udp_loglib.py 2021 gevent_join spawn         gevent.spawn(form._mib_recv),\n (<class 'udp_loglib.myGevent'>, <bound method TestPlatForm._mib_recv of <udp_loglib.TestPlatForm object >>) {}
2022-03-29 16:28:55 udp_loglib.py 2022 gevent_join spawn         gevent.spawn(form._wireshark_recv)]\n (<class 'udp_loglib.myGevent'>, <bound method TestPlatForm._wireshark_recv of <udp_loglib.TestPlatForm object >>) {}
2022-03-29 16:28:55 udp_loglib.py 2025 gevent_join joinall     gevent.joinall(default_list)\n (<class 'udp_loglib.myGevent'>, [<Greenlet >>(<bound method TestPlatForm._log_recv of <udp_logli, [FrameInfo(frame=<frame >, <Greenlet >>(<bound method TestPlatForm._log_recv of <udp_logli, [FrameInfo(frame=<frame >, <Greenlet >>(<bound method TestPlatForm._serial_recv of <udp_lo, [FrameInfo(frame=<frame >, <Greenlet >>(<bound method TestPlatForm._mib_recv of <udp_logli, [FrameInfo(frame=<frame >, <Greenlet >>(<bound method TestPlatForm._wireshark_recv of <udp, [FrameInfo(frame=<frame >, <Greenlet >>(<function confSet >, [FrameInfo(frame=<frame >]) {}
2022-03-29 16:28:55 Cfg2_SyRTC_0001.py 87 confSet respondCheck         FrameLib.respondCheck()   (<class 'udp_loglib.FrameLib'>,) {}
2022-03-29 16:28:55 udp_loglib.py 667 respondCheck mPrint                 Public.mPrint('set success TP Ver-3.0.5')\n ('set success TP Ver-3.0.5',) {}
2022-03-29 16:28:55 udp_loglib.py 378 run _log_recv             rt_val = func(*args, **kwargs)\n (<udp_loglib.UdpClient object >,) {}
2022-03-29 16:28:55 udp_loglib.py 1819 _log_recv mPrint         mPrint('recv start %s,%s' % client.remote)\n ('recv start 20.2.1.10,18125',) {}
2022-03-29 16:28:55 udp_loglib.py 378 run _log_recv             rt_val = func(*args, **kwargs)\n (<udp_loglib.UdpClient object >,) {}
2022-03-29 16:28:55 udp_loglib.py 1819 _log_recv mPrint         mPrint('recv start %s,%s' % client.remote)\n ('recv start 20.1.1.10,18125',) {}
2022-03-29 16:28:55 udp_loglib.py 1932 _mib_recv get_value                 self.mib.get_value('lruDefaultCode', outfile= 'auto_getmib.log', raise_error=False)\n ('lruDefaultCode',) {'outfile': 'auto_getmib.log', 'raise_error': False}
2022-03-29 16:28:55 Cfg2_SyRTC_0001.py 25 LogPath_set path_set     Log.path_set(dir_path)\n (<class 'udp_loglib.Log'>, 'f:\\Testplatform\\Master\\testplatform\\case_test\\testcase/Log/Cfg2_SyRTC_0001/02') {}
2022-03-29 16:28:55 udp_loglib.py 1479 path_set mPrint         mPrint('Log path set to %s' % cls._root)\n ('Log path set to f:\\Testplatform\\Master\\testplatform\\case_test\\testcase\\Log\\Cfg2_SyRTC_0001\\02/',) {}
2022-03-29 16:28:55 udp_loglib.py 1396 tag_send __init__         frame = UdpSendFrame()\n () {}
2022-03-29 16:28:55 Cfg2_SyRTC_0001.py 65 step2 tst_set     form.tst_set(dst_slot, Tag.tag_send('00010111'))\n ('3-7', <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:28:55 udp_loglib.py 1351 _set __init__         frame = UdpSendFrame()\n () {}
2022-03-29 16:28:55 udp_loglib.py 1753 tst_set tst_set             self.tst_set(slots, Conf.allFlagSet(1), False, False)\n ('3-7', <udp_loglib.UdpSendFrame object >, False, False) {}
2022-03-29 16:28:55 udp_loglib.py 1781 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:28:55 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.1',) {'snmpip': '20.2.1.10'}
2022-03-29 16:28:55 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.1',) {'snmpip': '20.1.1.10'}
2022-03-29 16:28:55 udp_loglib.py 1914 _wireshark_recv start                 p_new = self.wireShark.start(outfile='wireshark_recv.pcapng', block=False)\n () {'outfile': 'wireshark_recv.pcapng', 'block': False}
2022-03-29 16:28:55 wireShark.py 103 start mPrint             self.print('%s' % self.get_path(outfile))\n ('f:\\Testplatform\\Master\\testplatform\\case_test\\testcase\\Log\\Cfg2_SyRTC_0001\\02/wireshark_recv.pcapng',) {}
2022-03-29 16:28:56 udp_loglib.py 1781 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:28:56 udp_loglib.py 1781 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:28:56 FuncLog.py 34 run _walk                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.2.1.4', 30) {'snmpip': '20.2.1.10'}
2022-03-29 16:28:56 FuncLog.py 34 run _walk                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.2.1.4', 30) {'snmpip': '20.1.1.10'}
2022-03-29 16:28:56 serialread.py 107 open_all mPrint             self.print('no port is avaliable')\n ('no port is avaliable',) {}
2022-03-29 16:28:56 udp_loglib.py 1852 _serial_recv mPrint                     mPrint('start listen', self._SerialRead.queue_dict.keys())\n ('start listen', dict_keys([])) {}
2022-03-29 16:28:57 wireShark.py 73 __find_Conn mPrint             self.print('“‘Ã´Õ¯  ≈‰∆˜: %s' % self._Conn)\n ('“‘Ã´Õ¯  ≈‰∆˜: blue',) {}
2022-03-29 16:28:57 udp_loglib.py 1781 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:28:57 udp_loglib.py 1781 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:28:57 udp_loglib.py 1781 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:28:58 udp_loglib.py 1781 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:28:58 udp_loglib.py 1781 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:28:59 udp_loglib.py 1781 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:28:59 udp_loglib.py 1781 tst_set resigeter                 FrameLib.resigeter(frame.copy())\n (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:28:59 udp_loglib.py 1932 _mib_recv get_value                 self.mib.get_value('lruDefaultCode', outfile= 'auto_getmib.log', raise_error=False)\n ('lruDefaultCode',) {'outfile': 'auto_getmib.log', 'raise_error': False}
2022-03-29 16:28:59 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.1',) {'snmpip': '20.2.1.10'}
2022-03-29 16:28:59 FuncLog.py 34 run _get                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.1',) {'snmpip': '20.1.1.10'}
2022-03-29 16:28:59 udp_loglib.py 1787 tst_set respondCheck             FrameLib.respondCheck()\n (<class 'udp_loglib.FrameLib'>,) {}
2022-03-29 16:29:00 FuncLog.py 34 run _walk                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.2.1.4', 30) {'snmpip': '20.2.1.10'}
2022-03-29 16:29:00 FuncLog.py 34 run _walk                     caller = getframeinfo(_stack[0][0])\n ('1.3.6.1.4.1.13933.100.3.2.1.4', 30) {'snmpip': '20.1.1.10'}
2022-03-29 16:29:03 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF120F00000000030001000171F5',) {}
2022-03-29 16:29:03 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:03 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:04 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF120F000000000300010001FB33',) {}
2022-03-29 16:29:04 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:04 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:04 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF120F00000000030001000169B6',) {}
2022-03-29 16:29:04 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:04 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:05 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF120F000000000300010001E370',) {}
2022-03-29 16:29:05 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:05 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:05 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF120F0000000003000100016C1B',) {}
2022-03-29 16:29:05 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:05 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:05 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF100F0000010111000000004B4F',) {}
2022-03-29 16:29:05 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:05 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:06 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF100F000001011100000000C189',) {}
2022-03-29 16:29:06 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:06 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:06 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF100F000001011100000000530C',) {}
2022-03-29 16:29:06 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:06 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:07 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF100F000001011100000000D9CA',) {}
2022-03-29 16:29:07 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:07 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:07 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF100F00000101110000000056A1',) {}
2022-03-29 16:29:07 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:07 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:11 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF120F00000000030001000171F5',) {}
2022-03-29 16:29:11 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:11 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:12 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF120F000000000300010001FB33',) {}
2022-03-29 16:29:12 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:12 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:12 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF120F00000000030001000169B6',) {}
2022-03-29 16:29:12 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:12 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:13 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF120F000000000300010001E370',) {}
2022-03-29 16:29:13 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:13 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:13 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF120F0000000003000100016C1B',) {}
2022-03-29 16:29:13 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:13 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:13 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF100F0000010111000000004B4F',) {}
2022-03-29 16:29:14 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:14 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:14 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF100F000001011100000000C189',) {}
2022-03-29 16:29:14 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:14 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:14 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF100F000001011100000000530C',) {}
2022-03-29 16:29:14 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:14 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:15 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF100F000001011100000000D9CA',) {}
2022-03-29 16:29:15 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:15 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:15 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF100F00000101110000000056A1',) {}
2022-03-29 16:29:15 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:15 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:19 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF120F00000000030001000171F5',) {}
2022-03-29 16:29:19 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:19 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:21 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF120F000000000300010001FB33',) {}
2022-03-29 16:29:21 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:21 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:21 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF120F00000000030001000169B6',) {}
2022-03-29 16:29:21 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:21 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:22 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF120F000000000300010001E370',) {}
2022-03-29 16:29:22 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:22 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:22 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF120F0000000003000100016C1B',) {}
2022-03-29 16:29:22 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:22 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:22 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF100F0000010111000000004B4F',) {}
2022-03-29 16:29:22 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:22 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:22 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF100F000001011100000000C189',) {}
2022-03-29 16:29:22 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:22 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:22 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF100F000001011100000000530C',) {}
2022-03-29 16:29:22 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:22 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:23 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF100F000001011100000000D9CA',) {}
2022-03-29 16:29:23 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:23 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:23 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF100F00000101110000000056A1',) {}
2022-03-29 16:29:23 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:23 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:28 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF120F00000000030001000171F5',) {}
2022-03-29 16:29:28 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:28 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:29 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF120F000000000300010001FB33',) {}
2022-03-29 16:29:29 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:29 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:29 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF120F00000000030001000169B6',) {}
2022-03-29 16:29:29 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:29 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:30 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF120F000000000300010001E370',) {}
2022-03-29 16:29:30 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:30 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:30 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF120F0000000003000100016C1B',) {}
2022-03-29 16:29:30 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:30 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:30 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF100F0000010111000000004B4F',) {}
2022-03-29 16:29:30 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:30 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:30 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF100F000001011100000000C189',) {}
2022-03-29 16:29:30 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:30 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:30 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF100F000001011100000000530C',) {}
2022-03-29 16:29:30 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:30 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:31 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF100F000001011100000000D9CA',) {}
2022-03-29 16:29:31 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:31 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:31 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF100F00000101110000000056A1',) {}
2022-03-29 16:29:31 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:31 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:36 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF120F00000000030001000171F5',) {}
2022-03-29 16:29:36 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:36 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:37 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF120F000000000300010001FB33',) {}
2022-03-29 16:29:37 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:37 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:37 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF120F00000000030001000169B6',) {}
2022-03-29 16:29:37 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:37 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:38 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF120F000000000300010001E370',) {}
2022-03-29 16:29:38 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:38 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:38 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF120F0000000003000100016C1B',) {}
2022-03-29 16:29:38 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:38 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:38 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF100F0000010111000000004B4F',) {}
2022-03-29 16:29:38 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:38 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:38 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF100F000001011100000000C189',) {}
2022-03-29 16:29:38 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:38 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:38 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF100F000001011100000000530C',) {}
2022-03-29 16:29:38 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:38 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:39 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF100F000001011100000000D9CA',) {}
2022-03-29 16:29:39 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:39 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:39 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF100F00000101110000000056A1',) {}
2022-03-29 16:29:39 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:39 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:44 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF120F00000000030001000171F5',) {}
2022-03-29 16:29:44 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:44 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:46 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF120F000000000300010001FB33',) {}
2022-03-29 16:29:46 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:46 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:46 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF120F00000000030001000169B6',) {}
2022-03-29 16:29:46 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:46 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:47 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF120F000000000300010001E370',) {}
2022-03-29 16:29:47 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:47 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:47 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF120F0000000003000100016C1B',) {}
2022-03-29 16:29:47 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:47 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:47 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF100F0000010111000000004B4F',) {}
2022-03-29 16:29:47 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:47 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:47 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF100F000001011100000000C189',) {}
2022-03-29 16:29:47 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:47 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:47 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF100F000001011100000000530C',) {}
2022-03-29 16:29:47 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:47 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:48 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF100F000001011100000000D9CA',) {}
2022-03-29 16:29:48 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:48 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:48 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF100F00000101110000000056A1',) {}
2022-03-29 16:29:48 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:48 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:52 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF120F00000000030001000171F5',) {}
2022-03-29 16:29:52 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:52 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:54 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF120F000000000300010001FB33',) {}
2022-03-29 16:29:54 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:54 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:54 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF120F00000000030001000169B6',) {}
2022-03-29 16:29:54 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:54 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:55 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF120F000000000300010001E370',) {}
2022-03-29 16:29:55 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:55 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:55 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF120F0000000003000100016C1B',) {}
2022-03-29 16:29:55 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:55 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:55 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_3,CPUA not recv respond, msg 0cFF100F0000010111000000004B4F',) {}
2022-03-29 16:29:55 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:55 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:55 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_4,CPUA not recv respond, msg 0eFF100F000001011100000000C189',) {}
2022-03-29 16:29:55 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:55 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:55 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_5,CPUA not recv respond, msg 10FF100F000001011100000000530C',) {}
2022-03-29 16:29:56 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:56 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:56 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_6,CPUA not recv respond, msg 12FF100F000001011100000000D9CA',) {}
2022-03-29 16:29:56 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:56 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
2022-03-29 16:29:56 udp_loglib.py 657 respondCheck mPrint                     Public.mPrint('the msg to %s,%s not recv respond, msg %s' %\n ('the msg to 1_7,CPUA not recv respond, msg 14FF100F00000101110000000056A1',) {}
2022-03-29 16:29:56 udp_loglib.py 660 respondCheck _reSend                     TestPlatForm.form._reSend(\n (<udp_loglib.UdpSendFrame object >,) {}
2022-03-29 16:29:56 udp_loglib.py 1836 _reSend resigeter         FrameLib.resigeter(frame)   (<class 'udp_loglib.FrameLib'>, <udp_loglib.UdpSendFrame object >) {}
