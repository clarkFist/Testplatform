# !/usr/bin/python
# _*_ coding: utf-8 _*_
import sys, os
'''添加系统路径'''
#region
sysPath_temp = []
paths = os.path.abspath(os.path.dirname(__file__)).split('\\')
for i in range(-1, -len(paths), -1):
    #path = '\\'.join(paths[:i] + [paths[i]])
    if 'case_test' in paths[i]:
        path = '\\'.join(paths[:i] + [paths[i]])
        break
sysPath_temp.append(path)
sys.path += [path for path in sysPath_temp if path not in sys.path]
import caseFunc
from caseFunc import Log, Config, FrameLib, Conf, Tag, Simulator, sleep, Public, gevent, funclog
import threading
import time
form = Config.form
#endregion

def LogPath_set(path):
    dir_path = os.path.dirname(__file__) + '/Log/%s/%s' % (os.path.splitext(os.path.basename(__file__))[0], path)
    Log.path_set(dir_path)
def before_main():
    LogPath_set('default')
'''''''''''' # 以上为固定头
requirement = caseFunc.StubRequirement(slots=None) #slots='2,3-8'  # 当前用例的环境需求 ，该变量必须赋值

def step1():
    dst_slot = '8'
    caseFunc.vm_build_update(dst_slot, 'VCU_SVCU_SwRTC_0055_1')
    LogPath_set('01')
    time.sleep(130)
    sims = Simulator('cfg2')
    for i in range(1, 7):
        sims.openwith(i, 'A')
        
    funcMode_dict = form.get_funcMode(dst_slot)
    for slot, funcmode in funcMode_dict.items():
        if funcmode != 'BOOT_FAILED':
            raise Exception(slot, funcmode)
    mvcu_a = form.get_active_mvcu()
    print(mvcu_a)
    form.wireShark.start(timeout=100, outfile='step1.pcap', block=False)
def step2():
    dst_slot = '8'
    form.update('S19', 0, dst_slot, dirname=caseFunc.Config.get_normal_image_path() )
    time.sleep(120)
    
    LogPath_set('02')
 
    form.tst_set(dst_slot, Tag.tag_send('00550211'))
    form.wireShark.start(timeout=100, outfile='step2.pcap', block=True)
    

def step3():
    dst_slot = '8'
    LogPath_set('03')
    form.tst_set(dst_slot, Tag.tag_send('00550200'))
    form.tst_set(dst_slot, Tag.tag_send('00550311'))
    form.wireShark.start(timeout=100, outfile='step3.pcap', block=False)

def step4():
    dst_slot = '8'
    form.vmtool.copySrc_toVM('svcu')
    form.vmtool.openTagInit('svcu', 'VCU_SVCU_SwRTC_0055_4')
    form.vmtool.build('svcu')
    form.vmtool.copyImage_fromVM('svcu')
    form.update('S19', 0, dst_slot)
    LogPath_set('04')
    time.sleep(110)
    form.wireShark.start(timeout=100, outfile='step4.pcap', block=True)


def main():
    step1()
    step2()
    step3()
    step4()
if __name__ == "__main__":
    '''使用例可以作为单独的模块执行'''
    
    from udp_loglib import TestPlatForm, gevent_join
    form = TestPlatForm(18125, 18125)
    Config.form = form
    
    def confSet():
        FrameLib.respondCheck()  # 会检查之前所有的需回复消息，检查完毕后结束
        t = threading.Thread(target=main)
        t.start()
        t.join()
        Public.normal_end()
        Public.mPrint('exit')
    st = time.time()
    
    gevent_join(confSet)
    print(time.time() - st)

    